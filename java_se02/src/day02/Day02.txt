Java IO流(InputStream/OutputStream)
在变量、数组、对象中村粗的数据都是暂时的，程序结束之后它们就会
自动丢失，为了能够永久性的保存程序创建的数据，需要将数据保存在
磁盘的文件当中，这样就可以在其他程序当中使用这些数据，Java中的
I/O技术可以将数据保存在文本文件、二进制文件、甚至是ZIP压缩文件
当中

File类
该类用于文件（或者目录）,其实例是用于描述文件系统的一个文件或者
目录的,程序员通过File类可以在程序中操作硬盘上的文件或者目录
注意:
File类只能用于表达文件的信息(名称、大小、修改日期等)
不能访问文件的内容，表示文件系统对文件、目录的一个
管理操作（增删改查）

常用方法:
File(String fileName):指定文件名的构造器
long length():获取文件的长度(字节量)
long lastModified:获取文件最后一次的修改时间
String getName():获取文件名
String getPath():获取相对路径
boolean exists():判断文件是否存在
file.isFile();判断file是否为文件
dir.isDirectory():判断是否为目录(文件夹)
boolean canRead():判断是否可读
boolean canWrite():判断是否可写
mkdir():创建一个目录
file.createNewFile():创建file对象所描述的文件

File类:
1)File类代表文件,文件夹
2)可以实现文件系统的操作(创建,修改,删除,查找)没有提供递归处理
3)new File()不是创建文件,文件夹,仅仅是创建内存对象,描述一个文件
或文件夹的
4)File类不能操作文件里面的内容
文件:一个长长的byte有序序列
RandomAccessFile类:
可以用来修改或者操作文件里面的内容
1)以byte(字节,占8个bit位)为单位处理文件
2)使用文件指针(下标)读写文件内容,一次读写一个byte
3)档读写文件内容的时候,文件指针自动加1,为了方便下次的读写操作
4)为了方便读写基本类型的数据,提供了基本类型数据的读写方法,底层
依旧是以byte为单位进行读写操作的

RandomAccessFile的常用方法
1)构造器
	打开的文件,状态"r","rw"(创建该类对象时,会自动打开该文件,文件的状态有两种),
	如果是写的时候,文件不存在就自动创建文件,打开文件的时候,默认文件的指针位置为0
	如果打开已经存在的文件,立即写,就是对文件的覆盖操作,如果将文件指针跳到length()
	位置,就是对文件内容追加写操作
	
	
